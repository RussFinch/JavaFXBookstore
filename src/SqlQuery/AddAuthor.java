package SqlQuery;

import Database.DbConnection;
import Database.UpdatesConnection;
import java.io.FileNotFoundException;
import java.util.ArrayList;

/**
 * This class builds add Author query from data
 * generated by add Author interface.
 * @author russellfincham
 * @version 0.2
 * @since 17-07-18
 */

public class AddAuthor {
    /**
     * This method generates SQL For a Author addition.
     * It generates the query which it then passes to the
     * database connection manager DbConnection.Manager. Results then
     * returned to AddAuthorController.btnAuthorAddAction method for
     * the add genre Interface.
     * Data validity checking handled before execution of INSERT.
     * @param authorId ID of author input into interface
     * @param authorFirstName first name of author input into interface
     * @param authorSurname surname of author input into interface
     * @throws FileNotFoundException if file cannot be accessed by
     * DbCredentials.DbUser().
     * @return String result of SQL transaction.
     */
    public static String Query(String authorId, String authorFirstName,
                               String authorSurname)
            throws FileNotFoundException {

        String result;

        String sqlTestID = "SELECT 1 FROM authors WHERE author_id = '"
                + authorId + "' LIMIT 1;";

        String sqlTestFName = "SELECT 1 FROM authors WHERE author_firstname = '"
                + authorFirstName + "' LIMIT 1;";

        String sqlTestSName = "SELECT 1 FROM authors WHERE author_surname = '"
                + authorSurname + "' LIMIT 1;";

        String sqlQuery = "INSERT INTO authors (author_id, author_firstname, author_surname) "
                + "VALUES ('" + authorId + "', '" + authorFirstName + "', '" + authorSurname + "');";

        ArrayList<String[]> idTest = new ArrayList<>(DbConnection.Manager(sqlTestID));
        ArrayList<String[]> fNameTest = new ArrayList<>(DbConnection.Manager(sqlTestFName));
        ArrayList<String[]> sNameTest = new ArrayList<>(DbConnection.Manager(sqlTestSName));

        if (idTest.get(0)[0].equals("1")) {
            result = "Author ID already in use.";
        }
        else if ((fNameTest.get(0)[0].equals("1")) && (sNameTest.get(0)[0].equals("1"))) {
            result = " Name already in system.";
        }
        else {
            result = UpdatesConnection.queryDatabase(sqlQuery);
        }

        return result;
    }
}